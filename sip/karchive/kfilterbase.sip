// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KFilterBase /NoDefaultCtors/
{
%TypeHeaderCode
#include <kfilterbase.h>
%End

public:
                            KFilterBase ();
    virtual ~KFilterBase ();
    void                    setDevice (QIODevice* dev, bool autodelete = 0);
    QIODevice*              device ();
    virtual bool            init (int mode)=0;
    virtual int             mode () const=0;
    virtual bool            terminate ();
    virtual void            reset ();
    virtual bool            readHeader ()=0;
    virtual bool            writeHeader (const QByteArray& filename)=0;
    virtual void            setOutBuffer (char* data, uint maxlen)=0;
    virtual void            setInBuffer (const char* data, uint size)=0;
    virtual bool            inBufferEmpty () const;
    virtual int             inBufferAvailable () const=0;
    virtual bool            outBufferFull () const;
    virtual int             outBufferAvailable () const=0;
    enum Result
    {
        Ok,
        End,
        Error
    };
    virtual KFilterBase::Result  uncompress ()=0;
    virtual KFilterBase::Result  compress (bool finish)=0;
    enum FilterFlags
    {
        NoHeaders,
        WithHeaders,
        ZlibHeaders
    };
    void                    setFilterFlags (KFilterBase::FilterFlags flags);
    KFilterBase::FilterFlags  filterFlags () const;
protected:
    virtual void            virtual_hook (int id, void* data);
};
