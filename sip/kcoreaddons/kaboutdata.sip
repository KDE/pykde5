// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KAboutPerson
{
%TypeHeaderCode
#include <kaboutdata.h>
%End

public:
    explicit                KAboutPerson (const QString& name, const QString& task = QString(), const QString& emailAddress = QString(), const QString& webAddress = QString(), const QString& ocsUsername = QString());
                            KAboutPerson (const KAboutPerson& other);
    ~KAboutPerson ();
    QString                 name () const;
    QString                 task () const;
    QString                 emailAddress () const;
    QString                 webAddress () const;
    QString                 ocsUsername () const;
private:
    explicit                KAboutPerson (const QString& name, const QString& email, bool disambiguation);
public:
//ig    KAboutPerson&           operator= (const KAboutPerson& other);
};
class KAboutData
{
%TypeHeaderCode
#include <kaboutdata.h>
%End

public:
    static KAboutData       applicationData ();
    static void             setApplicationData (const KAboutData& aboutData);
    static void             registerPluginData (const KAboutData& aboutData);
    static KAboutData*      pluginData (const QString& componentName);
                            KAboutData (const KAboutData& other);
    ~KAboutData ();
    KAboutData&             addAuthor (const QString& name, const QString& task = QString(), const QString& emailAddress = QString(), const QString& webAddress = QString(), const QString& ocsUsername = QString());
    KAboutData&             addCredit (const QString& name, const QString& task = QString(), const QString& emailAddress = QString(), const QString& webAddress = QString(), const QString& ocsUserName = QString());
    KAboutData&             setTranslator (const QString& name, const QString& emailAddress);
    KAboutData&             setLicenseText (const QString& license);
    KAboutData&             addLicenseText (const QString& license);
    KAboutData&             setLicenseTextFile (const QString& file);
    KAboutData&             addLicenseTextFile (const QString& file);
    KAboutData&             setComponentName (const QString& componentName);
    KAboutData&             setDisplayName (const QString& displayName);
    KAboutData&             setProgramIconName (const QString& iconName);
    KAboutData&             setProgramLogo (const QVariant& image);
    KAboutData&             setOcsProvider (const QString& providerUrl);
    KAboutData&             setVersion (const QByteArray& version);
    KAboutData&             setShortDescription (const QString& shortDescription);
    KAboutData&             setCopyrightStatement (const QString& copyrightStatement);
    KAboutData&             setOtherText (const QString& otherText);
    KAboutData&             setHomepage (const QString& homepage);
    KAboutData&             setBugAddress (const QByteArray& bugAddress);
    KAboutData&             setOrganizationDomain (const QByteArray& domain);
    KAboutData&             setProductName (const QByteArray& name);
    QString                 componentName () const;
    QString                 productName () const;
    QString                 displayName () const;
    QString                 organizationDomain () const;
    const char*             internalProgramName () const;
    QString                 programIconName () const;
    QVariant                programLogo () const;
    QString                 ocsProviderUrl () const;
    QString                 version () const;
    const char*             internalVersion () const;
    QString                 shortDescription () const;
    QString                 homepage () const;
    QString                 bugAddress () const;
    const char*             internalBugAddress () const;
    QList<KAboutPerson>     authors () const;
    QList<KAboutPerson>     credits () const;
    QList<KAboutPerson>     translators () const;
    static QString          aboutTranslationTeam ();
    QString                 otherText () const;
    QList<KAboutLicense>    licenses () const;
    QString                 copyrightStatement () const;
    QString                 customAuthorPlainText () const;
    QString                 customAuthorRichText () const;
    bool                    customAuthorTextEnabled () const;
    KAboutData&             setCustomAuthorText (const QString& plainText, const QString& richText);
    KAboutData&             unsetCustomAuthorText ();
//ig    bool                    setupCommandLine (QCommandLineParser* parser);
//ig    void                    processCommandLine (QCommandLineParser* parser);
                            KAboutData (const QString& componentName, const QString& displayName, const QString& version, const QString& shortDescription, KAboutLicense::LicenseKey licenseType, const QString& copyrightStatement = QString(), const QString& otherText = QString(), const QString& homePageAddress = QString(), const QString& bugsEmailAddress = QLatin1String("submit@bugs.kde.org"));
                            KAboutData (const QString& componentName, const QString& displayName, const QString& version);
//ig    KAboutData&             operator= (const KAboutData& other);
    KAboutData&             setLicense (KAboutLicense::LicenseKey licenseKey);
    KAboutData&             addLicense (KAboutLicense::LicenseKey licenseKey);
};
class KAboutLicense
{
%TypeHeaderCode
#include <kaboutdata.h>
%End

public:
                            KAboutLicense (const KAboutLicense& other);
    ~KAboutLicense ();
    QString                 text () const;
    KAboutLicense::LicenseKey  key () const;
    static KAboutLicense    byKeyword (const QString& keyword);
private:
    explicit                KAboutLicense (const KAboutData* aboutData);
public:
    enum LicenseKey
    {
        Custom,
        File,
        Unknown,
        GPL,
        GPL_V2,
        LGPL,
        LGPL_V2,
        BSDL,
        Artistic,
        QPL,
        QPL_V1_0,
        GPL_V3,
        LGPL_V3
    };
    enum NameFormat
    {
        ShortName,
        FullName
    };
//ig    KAboutLicense&          operator= (const KAboutLicense& other);
    QString                 name (KAboutLicense::NameFormat formatName) const;
private:
    explicit                KAboutLicense (KAboutLicense::LicenseKey licenseType, const KAboutData* aboutData);
};
