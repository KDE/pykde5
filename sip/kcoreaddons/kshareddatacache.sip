// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KSharedDataCache
{
%TypeHeaderCode
#include <kshareddatacache.h>
%End

public:
                            KSharedDataCache (const QString& cacheName, unsigned defaultCacheSize, unsigned expectedItemSize = 0);
    ~KSharedDataCache ();
    enum EvictionPolicy
    {
        NoEvictionPreference,
        EvictLeastRecentlyUsed,
        EvictLeastOftenUsed,
        EvictOldest
    };
    KSharedDataCache::EvictionPolicy  evictionPolicy () const;
    void                    setEvictionPolicy (KSharedDataCache::EvictionPolicy newPolicy);
    bool                    insert (const QString& key, const QByteArray& data);
    bool                    find (const QString& key, QByteArray* destination) const;
    void                    clear ();
    static void             deleteCache (const QString& cacheName);
    bool                    contains (const QString& key) const;
    unsigned                totalSize () const;
    unsigned                freeSize () const;
    unsigned                timestamp () const;
    void                    setTimestamp (unsigned newTimestamp);
};
