// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KModifierKeyInfo : QObject
{
%TypeHeaderCode
#include <kmodifierkeyinfo.h>
%End

public:
                            KModifierKeyInfo (QObject* parent = 0);
    virtual ~KModifierKeyInfo ();
    bool                    knowsKey (Qt::Key key) const;
    const QList<Qt::Key>    knownKeys () const;
    bool                    isKeyPressed (Qt::Key key) const;
    bool                    isKeyLatched (Qt::Key key) const;
    bool                    setKeyLatched (Qt::Key key, bool latched);
    bool                    isKeyLocked (Qt::Key key) const;
    bool                    setKeyLocked (Qt::Key key, bool locked);
    bool                    isButtonPressed (Qt::MouseButton button) const;
signals:
    void                    keyPressed (Qt::Key key, bool pressed);
    void                    keyLatched (Qt::Key key, bool latched);
    void                    keyLocked (Qt::Key key, bool locked);
    void                    buttonPressed (Qt::MouseButton button, bool pressed);
    void                    keyAdded (Qt::Key key);
    void                    keyRemoved (Qt::Key key);
};
