// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KDescendantsProxyModel : QAbstractProxyModel
{
%TypeHeaderCode
#include <kdescendantsproxymodel.h>
%End

public:
    explicit                KDescendantsProxyModel (QObject* parent = 0);
    virtual ~KDescendantsProxyModel ();
    virtual void            setSourceModel (QAbstractItemModel* model);
    void                    setRootIndex (const QModelIndex& index);
    void                    setDisplayAncestorData (bool display);
    bool                    displayAncestorData () const;
    void                    setAncestorSeparator (const QString& separator);
    QString                 ancestorSeparator () const;
    QModelIndex             mapFromSource (const QModelIndex& sourceIndex) const;
    QModelIndex             mapToSource (const QModelIndex& proxyIndex) const;
    virtual Qt::ItemFlags   flags (const QModelIndex& index) const;
    QVariant                data (const QModelIndex& index, int role = Qt::DisplayRole) const;
    virtual int             rowCount (const QModelIndex& parent = QModelIndex()) const;
    virtual QVariant        headerData (int section, Qt::Orientation orientation, int role) const;
    virtual QMimeData*      mimeData (const QModelIndexList& indexes) const;
    virtual QStringList     mimeTypes () const;
    virtual bool            hasChildren (const QModelIndex& parent = QModelIndex()) const;
    virtual QModelIndex     index (int, int, const QModelIndex& parent = QModelIndex()) const;
    virtual QModelIndex     parent (const QModelIndex&) const;
    virtual int             columnCount (const QModelIndex& index = QModelIndex()) const;
    virtual Qt::DropActions  supportedDropActions () const;
    virtual QModelIndexList  match (const QModelIndex& start, int role, const QVariant& value, int hits = 1, Qt::MatchFlags flags = Qt::MatchFlags(Qt::MatchStartsWith|Qt::MatchWrap)) const;
};
