// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KCategorizedSortFilterProxyModel : QSortFilterProxyModel
{
%TypeHeaderCode
#include <kcategorizedsortfilterproxymodel.h>
%End

public:
    enum AdditionalRoles
    {
        CategoryDisplayRole,
        CategorySortRole
    };
                            KCategorizedSortFilterProxyModel (QObject* parent = 0);
    virtual ~KCategorizedSortFilterProxyModel ();
    virtual void            sort (int column, Qt::SortOrder order = Qt::AscendingOrder);
    bool                    isCategorizedModel () const;
    void                    setCategorizedModel (bool categorizedModel);
    int                     sortColumn () const;
    Qt::SortOrder           sortOrder () const;
    void                    setSortCategoriesByNaturalComparison (bool sortCategoriesByNaturalComparison);
    bool                    sortCategoriesByNaturalComparison () const;
protected:
    virtual bool            lessThan (const QModelIndex& left, const QModelIndex& right) const;
    virtual bool            subSortLessThan (const QModelIndex& left, const QModelIndex& right) const;
    virtual int             compareCategories (const QModelIndex& left, const QModelIndex& right) const;
};
