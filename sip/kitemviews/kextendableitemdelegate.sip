// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KExtendableItemDelegate : QStyledItemDelegate
{
%TypeHeaderCode
#include <kextendableitemdelegate.h>
%End

public:
    enum auxDataRoles
    {
        ShowExtensionIndicatorRole
    };
                            KExtendableItemDelegate (QAbstractItemView* parent);
    virtual ~KExtendableItemDelegate ();
    virtual QSize           sizeHint (const QStyleOptionViewItem& option, const QModelIndex& index) const;
    virtual void            paint (QPainter* painter, const QStyleOptionViewItem& option, const QModelIndex& index) const;
    void                    extendItem (QWidget* extender, const QModelIndex& index);
    void                    contractItem (const QModelIndex& index);
    void                    contractAll ();
    bool                    isExtended (const QModelIndex& index) const;
    virtual void            updateExtenderGeometry (QWidget* extender, const QStyleOptionViewItem& option, const QModelIndex& index) const;
signals:
    void                    extenderCreated (QWidget* extender, const QModelIndex& index);
    void                    extenderDestroyed (QWidget* extender, const QModelIndex& index);
protected:
    QRect                   extenderRect (QWidget* extender, const QStyleOptionViewItem& option, const QModelIndex& index) const;
    void                    setExtendPixmap (const QPixmap& pixmap);
    void                    setContractPixmap (const QPixmap& pixmap);
    QPixmap                 extendPixmap ();
    QPixmap                 contractPixmap ();
};
