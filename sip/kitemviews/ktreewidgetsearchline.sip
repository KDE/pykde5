// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KTreeWidgetSearchLine : QLineEdit
{
%TypeHeaderCode
#include <ktreewidgetsearchline.h>
%End

public:
    explicit                KTreeWidgetSearchLine (QWidget* parent = 0, QTreeWidget* treeWidget = 0);
                            KTreeWidgetSearchLine (QWidget* parent, const QList<QTreeWidget*>& treeWidgets);
    virtual ~KTreeWidgetSearchLine ();
    Qt::CaseSensitivity     caseSensitivity () const;
    QList<int>              searchColumns () const;
    bool                    keepParentsVisible () const;
    QTreeWidget*            treeWidget () const;
    QList<QTreeWidget*>     treeWidgets () const;
signals:
    void                    hiddenChanged (QTreeWidgetItem*, bool);
    void                    searchUpdated (const QString& searchString);
public:
    void                    addTreeWidget (QTreeWidget* treeWidget);
    void                    removeTreeWidget (QTreeWidget* treeWidget);
    virtual void            updateSearch (const QString& pattern = QString());
    void                    setCaseSensitivity (Qt::CaseSensitivity caseSensitivity);
    void                    setKeepParentsVisible (bool value);
    void                    setSearchColumns (const QList<int>& columns);
    void                    setTreeWidget (QTreeWidget* treeWidget);
    void                    setTreeWidgets (const QList<QTreeWidget*>& treeWidgets);
protected:
    virtual bool            itemMatches (const QTreeWidgetItem* item, const QString& pattern) const;
    virtual void            contextMenuEvent (QContextMenuEvent*);
    virtual void            updateSearch (QTreeWidget* treeWidget);
    virtual void            connectTreeWidget (QTreeWidget*);
    virtual void            disconnectTreeWidget (QTreeWidget*);
    virtual bool            canChooseColumnsCheck ();
    virtual bool            event (QEvent* event);
};
