// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KFontChooser : QWidget
{
%TypeHeaderCode
#include <kfontchooser.h>
%End

public:
    enum FontColumn
    {
        FamilyList,
        StyleList,
        SizeList
    };
    enum FontDiff
    {
        NoFontDiffFlags,
        FontDiffFamily,
        FontDiffStyle,
        FontDiffSize,
        AllFontDiffs
    };
    typedef QFlags<KFontChooser::FontDiff> FontDiffFlags;
    enum DisplayFlag
    {
        NoDisplayFlags,
        FixedFontsOnly,
        DisplayFrame,
        ShowDifferences
    };
    typedef QFlags<KFontChooser::DisplayFlag> DisplayFlags;
    explicit                KFontChooser (QWidget* parent = 0L, const KFontChooser::DisplayFlags& flags = KFontChooser::DisplayFlag::DisplayFrame, const QStringList& fontList = QStringList(), int visibleListSize = 8);
//, Qt::CheckState* sizeIsRelativeState = 0L);

    virtual ~KFontChooser ();
    void                    enableColumn (int column, bool state);
    void                    setFont (const QFont& font, bool onlyFixed = 0);
    KFontChooser::FontDiffFlags  fontDiffFlags () const;
    QFont                   font () const;
    void                    setColor (const QColor& col);
    QColor                  color () const;
    void                    setBackgroundColor (const QColor& col);
    QColor                  backgroundColor () const;
    void                    setSizeIsRelative (Qt::CheckState relative);
    Qt::CheckState          sizeIsRelative () const;
    QString                 sampleText () const;
    void                    setSampleText (const QString& text);
    void                    setSampleBoxVisible (bool visible);
    enum FontListCriteria
    {
        FixedWidthFonts,
        ScalableFonts,
        SmoothScalableFonts
    };
    static void             getFontList (QStringList& list, uint fontListCriteria);
    virtual QSize           sizeHint () const;
signals:
    void                    fontSelected (const QFont& font);
};
