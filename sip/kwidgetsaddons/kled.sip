// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KLed : QWidget
{
%TypeHeaderCode
#include <kled.h>
%End

public:
    enum State
    {
        Off,
        On
    };
    enum Shape
    {
        Rectangular,
        Circular
    };
    enum Look
    {
        Flat,
        Raised,
        Sunken
    };
    explicit                KLed (QWidget* parent = 0);
    explicit                KLed (const QColor& color, QWidget* parent = 0);
                            KLed (const QColor& color, KLed::State state, KLed::Look look, KLed::Shape shape, QWidget* parent = 0);
    ~KLed ();
    QColor                  color () const;
    KLed::State             state () const;
    KLed::Look              look () const;
    KLed::Shape             shape () const;
    int                     darkFactor () const;
    void                    setColor (const QColor& color);
    void                    setState (KLed::State state);
    void                    setLook (KLed::Look look);
    void                    setShape (KLed::Shape shape);
    void                    setDarkFactor (int darkFactor);
    virtual QSize           sizeHint () const;
    virtual QSize           minimumSizeHint () const;
    void                    toggle ();
    void                    on ();
    void                    off ();
protected:
    void                    paintEvent (QPaintEvent*);
    void                    resizeEvent (QResizeEvent*);
    void                    updateCachedPixmap ();
};
