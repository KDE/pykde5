// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KPageWidgetItem : QObject
{
%TypeHeaderCode
#include <kpagewidgetmodel.h>
%End

public:
                            KPageWidgetItem (QWidget* widget);
                            KPageWidgetItem (QWidget* widget, const QString& name);
    ~KPageWidgetItem ();
    QWidget*                widget () const;
    void                    setName (const QString& name);
    QString                 name () const;
    void                    setHeader (const QString& header);
    QString                 header () const;
    void                    setIcon (const QIcon& icon);
    QIcon                   icon () const;
    void                    setCheckable (bool checkable);
    bool                    isCheckable () const;
    bool                    isChecked () const;
    bool                    isEnabled () const;
    void                    setEnabled (bool);
    void                    setChecked (bool checked);
signals:
    void                    changed ();
    void                    toggled (bool checked);
};
class KPageWidgetModel : KPageModel
{
%TypeHeaderCode
#include <kpagewidgetmodel.h>
%End

public:
    explicit                KPageWidgetModel (QObject* parent = 0);
    ~KPageWidgetModel ();
    KPageWidgetItem*        addPage (QWidget* widget, const QString& name);
    void                    addPage (KPageWidgetItem* item);
    KPageWidgetItem*        insertPage (KPageWidgetItem* before, QWidget* widget, const QString& name);
    void                    insertPage (KPageWidgetItem* before, KPageWidgetItem* item);
    KPageWidgetItem*        addSubPage (KPageWidgetItem* parent, QWidget* widget, const QString& name);
    void                    addSubPage (KPageWidgetItem* parent, KPageWidgetItem* item);
    void                    removePage (KPageWidgetItem* item);
    virtual int             columnCount (const QModelIndex& parent = QModelIndex()) const;
    virtual QVariant        data (const QModelIndex& index, int role = Qt::DisplayRole) const;
    virtual bool            setData (const QModelIndex& index, const QVariant& value, int role = Qt::EditRole);
    virtual Qt::ItemFlags   flags (const QModelIndex& index) const;
    virtual QModelIndex     index (int row, int column, const QModelIndex& parent = QModelIndex()) const;
    virtual QModelIndex     parent (const QModelIndex& index) const;
    virtual int             rowCount (const QModelIndex& parent = QModelIndex()) const;
    KPageWidgetItem*        item (const QModelIndex& index) const;
    QModelIndex             index (const KPageWidgetItem* item) const;
signals:
    void                    toggled (KPageWidgetItem* page, bool checked);
};
