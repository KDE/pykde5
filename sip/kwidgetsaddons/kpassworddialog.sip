// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KPasswordDialog : QDialog
{
%TypeHeaderCode
#include <kpassworddialog.h>
%End

public:
    enum KPasswordDialogFlag
    {
        NoFlags,
        ShowKeepPassword,
        ShowUsernameLine,
        UsernameReadOnly,
        ShowAnonymousLoginCheckBox,
        ShowDomainLine,
        DomainReadOnly
    };
    typedef QFlags<KPasswordDialog::KPasswordDialogFlag> KPasswordDialogFlags;
    enum ErrorType
    {
        UnknownError,
        UsernameError,
        PasswordError,
        FatalError,
        DomainError
    };
    explicit                KPasswordDialog (QWidget* parent = 0L, const KPasswordDialog::KPasswordDialogFlags& flags = 0);
    ~KPasswordDialog ();
    void                    setPrompt (const QString& prompt);
    QString                 prompt () const;
    void                    setPixmap (const QPixmap&);
    QPixmap                 pixmap () const;
    void                    addCommentLine (const QString& label, const QString& comment);
    void                    showErrorMessage (const QString& message, const KPasswordDialog::ErrorType type = KPasswordDialog::ErrorType::PasswordError);
    QString                 password () const;
    void                    setUsername (const QString&);
    QString                 username () const;
    void                    setDomain (const QString&);
    QString                 domain () const;
    void                    setAnonymousMode (bool anonymous);
    bool                    anonymousMode () const;
    bool                    keepPassword () const;
    void                    setKeepPassword (bool b);
    void                    setUsernameReadOnly (bool readOnly);
    void                    setPassword (const QString& password);
    void                    setKnownLogins (const QMap<QString,QString>& knownLogins);
    void                    accept ();
    QDialogButtonBox*       buttonBox () const;
signals:
    void                    gotPassword (const QString& password, bool keep);
    void                    gotUsernameAndPassword (const QString& username, const QString& password, bool keep);
protected:
    virtual bool            checkPassword ();
};
