// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KRatingWidget : QFrame
{
%TypeHeaderCode
#include <kratingwidget.h>
%End

public:
                            KRatingWidget (QWidget* parent = 0);
    ~KRatingWidget ();
    unsigned int            rating () const;
    int                     maxRating () const;
    Qt::Alignment           alignment () const;
    Qt::LayoutDirection     layoutDirection () const;
    int                     spacing () const;
    QSize                   sizeHint () const;
    bool                    halfStepsEnabled () const;
    QIcon                   icon () const;
signals:
//ig    void                    ratingChanged (unsigned int rating);
    void                    ratingChanged (int rating);
public:
    void                    setRating (int rating);
    void                    setMaxRating (int max);
    void                    setHalfStepsEnabled (bool enabled);
    void                    setSpacing (int);
    void                    setAlignment (Qt::Alignment align);
    void                    setLayoutDirection (Qt::LayoutDirection direction);
    void                    setIcon (const QIcon& icon);
    void                    setCustomPixmap (const QPixmap& pixmap);
    void                    setPixmapSize (int size);
protected:
    void                    mousePressEvent (QMouseEvent* e);
    void                    mouseMoveEvent (QMouseEvent* e);
    void                    leaveEvent (QEvent* e);
    void                    paintEvent (QPaintEvent* e);
    void                    resizeEvent (QResizeEvent* e);
};
