// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KSelectAction : QWidgetAction
{
%TypeHeaderCode
#include <kselectaction.h>
%End

public:
    explicit                KSelectAction (QObject* parent);
                            KSelectAction (const QString& text, QObject* parent);
                            KSelectAction (const QIcon& icon, const QString& text, QObject* parent);
    virtual ~KSelectAction ();
    enum ToolBarMode
    {
        MenuMode,
        ComboBoxMode
    };
    KSelectAction::ToolBarMode  toolBarMode () const;
    void                    setToolBarMode (KSelectAction::ToolBarMode mode);
    QToolButton::ToolButtonPopupMode  toolButtonPopupMode () const;
    void                    setToolButtonPopupMode (QToolButton::ToolButtonPopupMode mode);
    QActionGroup*           selectableActionGroup () const;
    QAction*                currentAction () const;
    int                     currentItem () const;
    QString                 currentText () const;
    QList<QAction*>         actions () const;
    QAction*                action (int index) const;
    QAction*                action (const QString& text, Qt::CaseSensitivity cs = Qt::CaseSensitive) const;
    bool                    setCurrentAction (QAction* action);
    bool                    setCurrentItem (int index);
    bool                    setCurrentAction (const QString& text, Qt::CaseSensitivity cs = Qt::CaseSensitive);
    void                    addAction (QAction* action);
    QAction*                addAction (const QString& text);
    QAction*                addAction (const QIcon& icon, const QString& text);
    virtual QAction*        removeAction (QAction* action);
    virtual void            insertAction (QAction* before, QAction* action);
    void                    setItems (const QStringList& lst);
    QStringList             items () const;
    bool                    isEditable () const;
    void                    setEditable (bool);
    int                     comboWidth () const;
    void                    setComboWidth (int width);
    void                    setMaxComboViewCount (int n);
    void                    clear ();
    void                    removeAllActions ();
    void                    setMenuAccelsEnabled (bool b);
    bool                    menuAccelsEnabled () const;
    void                    changeItem (int index, const QString& text);
signals:
    void                    triggered (QAction* action);
    void                    triggered (int index);
    void                    triggered (const QString& text);
protected:
    virtual void            actionTriggered (QAction* action);
    void                    slotToggled (bool);
    virtual QWidget*        createWidget (QWidget* parent);
    virtual void            deleteWidget (QWidget* widget);
    virtual bool            event (QEvent* event);
    virtual bool            eventFilter (QObject* watched, QEvent* event);
//ig                            KSelectAction (KSelectActionPrivate& dd, QObject* parent);
};
