// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KSelector : QAbstractSlider
{
%TypeHeaderCode
#include <kselector.h>
%End

public:
    explicit                KSelector (QWidget* parent = 0);
    explicit                KSelector (Qt::Orientation o, QWidget* parent = 0);
    ~KSelector ();
    QRect                   contentsRect () const;
    void                    setIndent (bool i);
    bool                    indent () const;
    void                    setArrowDirection (Qt::ArrowType direction);
    Qt::ArrowType           arrowDirection () const;
protected:
    virtual void            drawContents (QPainter*);
    virtual void            drawArrow (QPainter* painter, const QPoint& pos);
    virtual void            paintEvent (QPaintEvent*);
    virtual void            mousePressEvent (QMouseEvent* e);
    virtual void            mouseMoveEvent (QMouseEvent* e);
    virtual void            mouseReleaseEvent (QMouseEvent* e);
    virtual void            wheelEvent (QWheelEvent*);
};
class KGradientSelector : KSelector
{
%TypeHeaderCode
#include <kselector.h>
%End

public:
    explicit                KGradientSelector (QWidget* parent = 0);
    explicit                KGradientSelector (Qt::Orientation o, QWidget* parent = 0);
    ~KGradientSelector ();
    void                    setStops (const QGradientStops& stops);
    QGradientStops          stops () const;
    void                    setColors (const QColor& col1, const QColor& col2);
    void                    setText (const QString& t1, const QString& t2);
    void                    setFirstColor (const QColor& col);
    void                    setSecondColor (const QColor& col);
    void                    setFirstText (const QString& t);
    void                    setSecondText (const QString& t);
    QColor                  firstColor () const;
    QColor                  secondColor () const;
    QString                 firstText () const;
    QString                 secondText () const;
protected:
    virtual void            drawContents (QPainter*);
    virtual QSize           minimumSize () const;
};
