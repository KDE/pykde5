// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KUrlLabel : QLabel
{
%TypeHeaderCode
#include <kurllabel.h>
%End

public:
    explicit                KUrlLabel (QWidget* parent = 0L);
    explicit                KUrlLabel (const QString& url, const QString& text = QString(), QWidget* parent = 0L);
    virtual ~KUrlLabel ();
    QString                 url () const;
    QString                 tipText () const;
    bool                    useTips () const;
    bool                    useCursor () const;
    bool                    isGlowEnabled () const;
    bool                    isFloatEnabled () const;
    const QPixmap*          alternatePixmap () const;
    void                    setUnderline (bool on = 1);
    void                    setUrl (const QString& url);
    virtual void            setFont (const QFont& font);
    void                    setUseTips (bool on = 1);
    void                    setTipText (const QString& tip);
    void                    setHighlightedColor (const QColor& highcolor);
    void                    setHighlightedColor (const QString& highcolor);
    void                    setSelectedColor (const QColor& color);
    void                    setSelectedColor (const QString& color);
    void                    setUseCursor (bool on, QCursor* cursor = 0L);
    void                    setGlowEnabled (bool glow = 1);
    void                    setFloatEnabled (bool do_float = 1);
    void                    setAlternatePixmap (const QPixmap& pixmap);
signals:
    void                    enteredUrl (const QString& url);
    void                    enteredUrl ();
    void                    leftUrl (const QString& url);
    void                    leftUrl ();
    void                    leftClickedUrl (const QString& url);
    void                    leftClickedUrl ();
    void                    rightClickedUrl (const QString& url);
    void                    rightClickedUrl ();
    void                    middleClickedUrl (const QString& url);
    void                    middleClickedUrl ();
protected:
    virtual void            mouseReleaseEvent (QMouseEvent*);
    virtual void            enterEvent (QEvent*);
    virtual void            leaveEvent (QEvent*);
    virtual bool            event (QEvent*);
};
