// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Solid
{
class OpticalDrive : Solid::StorageDrive
{
%TypeHeaderCode
#include <opticaldrive.h>
%End

public:
    enum MediumType
    {
        Cdr,
        Cdrw,
        Dvd,
        Dvdr,
        Dvdrw,
        Dvdram,
        Dvdplusr,
        Dvdplusrw,
        Dvdplusdl,
        Dvdplusdlrw,
        Bd,
        Bdr,
        Bdre,
        HdDvd,
        HdDvdr,
        HdDvdrw
    };
    typedef QFlags<Solid::OpticalDrive::MediumType> MediumTypes;
private:
    explicit                OpticalDrive (QObject* backendObject);
public:
    virtual ~OpticalDrive ();
    static Solid::DeviceInterface::Type  deviceInterfaceType ();
    Solid::OpticalDrive::MediumTypes  supportedMedia () const;
    int                     readSpeed () const;
    int                     writeSpeed () const;
    QList<int>              writeSpeeds () const;
    bool                    eject ();
signals:
    void                    ejectPressed (const QString& udi);
    void                    ejectDone (Solid::ErrorType error, QVariant errorData, const QString& udi);
    void                    ejectRequested (const QString& udi);
};
};
