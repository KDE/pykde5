// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

%ModuleHeaderCode
#include <powermanagement.h>
%End
namespace Solid
{
namespace PowerManagement
{
enum SleepState
{
    StandbyState,
    SuspendState,
    HibernateState,
    HybridSuspendState
};
bool                    appShouldConserveResources ();
QSet<Solid::PowerManagement::SleepState>  supportedSleepStates ();
void                    requestSleep (Solid::PowerManagement::SleepState state, QObject* receiver, const char* member);
int                     beginSuppressingSleep (const QString& reason = QString());
bool                    stopSuppressingSleep (int cookie);
int                     beginSuppressingScreenPowerManagement (const QString& reason = QString());
bool                    stopSuppressingScreenPowerManagement (int cookie);
class Notifier : QObject
{

signals:
    void                    appShouldConserveResourcesChanged (bool newState);
    void                    resumingFromSuspend ();
protected:
                            Notifier ();
};
Solid::PowerManagement::Notifier*  notifier ();
};
};
