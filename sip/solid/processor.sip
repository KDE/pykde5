// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

%ModuleHeaderCode
#include <processor.h>
%End
namespace Solid
{
class Processor : Solid::DeviceInterface
{

    explicit                Processor (QObject* backendObject);
public:
    enum InstructionSet
    {
        NoExtensions,
        IntelMmx,
        IntelSse,
        IntelSse2,
        IntelSse3,
        IntelSsse3,
        IntelSse4,
        IntelSse41,
        IntelSse42,
        Amd3DNow,
        AltiVec
    };
    typedef QFlags<Solid::Processor::InstructionSet> InstructionSets;
    virtual ~Processor ();
    static Solid::DeviceInterface::Type  deviceInterfaceType ();
    int                     number () const;
    int                     maxSpeed () const;
    bool                    canChangeFrequency () const;
    Solid::Processor::InstructionSets  instructionSets () const;
};
};
