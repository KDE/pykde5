// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Solid
{
class StorageDrive : Solid::DeviceInterface
{
%TypeHeaderCode
#include <storagedrive.h>
%End

public:
    enum Bus
    {
        Ide,
        Usb,
        Ieee1394,
        Scsi,
        Sata,
        Platform
    };
    enum DriveType
    {
        HardDisk,
        CdromDrive,
        Floppy,
        Tape,
        CompactFlash,
        MemoryStick,
        SmartMedia,
        SdMmc,
        Xd
    };
private:
    explicit                StorageDrive (QObject* backendObject);
public:
    virtual ~StorageDrive ();
    static Solid::DeviceInterface::Type  deviceInterfaceType ();
    Solid::StorageDrive::Bus  bus () const;
    Solid::StorageDrive::DriveType  driveType () const;
    bool                    isRemovable () const;
    bool                    isHotpluggable () const;
    qulonglong              size () const;
    bool                    isInUse () const;
protected:
//ig                            StorageDrive (StorageDrivePrivate& dd, QObject* backendObject);
};
};
