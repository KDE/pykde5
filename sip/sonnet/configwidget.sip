// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Sonnet
{
class ConfigWidget : QWidget
{
%TypeHeaderCode
#include <configwidget.h>
%End

public:
    explicit                ConfigWidget (QWidget* parent);
    ~ConfigWidget ();
    bool                    backgroundCheckingButtonShown () const;
    void                    setLanguage (const QString& language);
    QString                 language () const;
    void                    save ();
    void                    setBackgroundCheckingButtonShown (bool);
    void                    slotDefault ();
protected:
    void                    slotIgnoreWordRemoved ();
    void                    slotIgnoreWordAdded ();
signals:
    void                    configChanged ();
%ConvertToSubClassCode
    // CTSCC for subclasses of 'QObject'
    sipType = NULL;

    if (dynamic_cast<Sonnet::Highlighter*>(sipCpp))
        sipType = sipType_Sonnet_Highlighter;
    else if (dynamic_cast<Sonnet::DictionaryComboBox*>(sipCpp))
        sipType = sipType_Sonnet_DictionaryComboBox;
    else if (dynamic_cast<Sonnet::ConfigDialog*>(sipCpp))
        sipType = sipType_Sonnet_ConfigDialog;
    else if (dynamic_cast<Sonnet::Dialog*>(sipCpp))
        sipType = sipType_Sonnet_Dialog;
    else if (dynamic_cast<Sonnet::ConfigWidget*>(sipCpp))
        sipType = sipType_Sonnet_ConfigWidget;
    else if (dynamic_cast<Sonnet::SpellCheckDecorator*>(sipCpp))
        sipType = sipType_Sonnet_SpellCheckDecorator;
%End
};
};
%ModuleHeaderCode
//ctscc
#include <configdialog.h>
#include <configwidget.h>
#include <dialog.h>
#include <dictionarycombobox.h>
#include <highlighter.h>
#include <qobject.h>
#include <spellcheckdecorator.h>
%End
