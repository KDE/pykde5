// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Sonnet
{
class Highlighter : QSyntaxHighlighter
{
%TypeHeaderCode
#include <highlighter.h>
%End

public:
    explicit                Highlighter (QTextEdit* textEdit, const QColor& col = QColor());
    ~Highlighter ();
    bool                    spellCheckerFound () const;
    QString                 currentLanguage () const;
    void                    setActive (bool active);
    bool                    isActive () const;
    bool                    automatic () const;
    void                    setAutomatic (bool automatic);
    void                    addWordToDictionary (const QString& word);
    void                    ignoreWord (const QString& word);
    QStringList             suggestionsForWord (const QString& word, int max = 10);
    bool                    isWordMisspelled (const QString& word);
    void                    setMisspelledColor (const QColor& color);
    bool                    checkerEnabledByDefault () const;
signals:
    void                    activeChanged (const QString& description);
protected:
    virtual void            highlightBlock (const QString& text);
    virtual void            setMisspelled (int start, int count);
    virtual void            unsetMisspelled (int start, int count);
    bool                    eventFilter (QObject* o, QEvent* e);
    bool                    intraWordEditing () const;
    void                    setIntraWordEditing (bool editing);
public:
    void                    setCurrentLanguage (const QString& language);
    void                    slotAutoDetection ();
    void                    slotRehighlight ();
%ConvertToSubClassCode
    // CTSCC for subclasses of 'Highlighter'
    sipType = NULL;

    if (dynamic_cast<Sonnet::Highlighter*>(sipCpp))
        sipType = sipType_Sonnet_Highlighter;
%End
    void                    setDocument (QTextDocument* document);
};
};
%ModuleHeaderCode
//ctscc
#include <highlighter.h>
%End
