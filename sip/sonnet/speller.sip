// Copyright 2014 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Sonnet
{
class Speller
{
%TypeHeaderCode
#include <speller.h>
%End

public:
    explicit                Speller (const QString& lang = QString());
    ~Speller ();
                            Speller (const Sonnet::Speller& speller);
//ig    Sonnet::Speller&        operator= (const Sonnet::Speller& speller);
    bool                    isValid () const;
    void                    setLanguage (const QString& lang);
    QString                 language () const;
    bool                    isCorrect (const QString& word) const;
    bool                    isMisspelled (const QString& word) const;
    QStringList             suggest (const QString& word) const;
    bool                    checkAndSuggest (const QString& word, QStringList& suggestions) const;
    bool                    storeReplacement (const QString& bad, const QString& good);
    bool                    addToPersonal (const QString& word);
    bool                    addToSession (const QString& word);
    enum Attribute
    {
        CheckUppercase,
        SkipRunTogether,
        AutoDetectLanguage
    };
    void                    save ();
    void                    restore ();
    QStringList             availableBackends () const;
    QStringList             availableLanguages () const;
    QStringList             availableLanguageNames () const;
    QMap<QString,QString>   availableDictionaries () const;
    void                    setDefaultLanguage (const QString& lang);
    QString                 defaultLanguage () const;
    void                    setDefaultClient (const QString& client);
    QString                 defaultClient () const;
    void                    setAttribute (Sonnet::Speller::Attribute attr, bool b = 1);
    bool                    testAttribute (Sonnet::Speller::Attribute attr) const;
};
};
